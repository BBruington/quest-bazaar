// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String      @id @default(cuid())
  username   String?     @unique
  email      String      @unique
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  characters Character[]
  campaigns  Campaign[]  @relation("CampaignPlayers")
  userPosts  UserPost[]
  likes      Like[]
  comments   Comment[]
  campaign   Campaign[]
}

model Character {
  id                String   @id @default(cuid())
  name              String
  race              String
  class             String
  level             Int
  background        String
  alignment         String
  experiencePoints  Int
  maxHitPoints      Int
  currentHitPoints  Int
  tempHitPoints     Int
  armorClass        Int
  initiative        Int
  speed             Int
  inspiration       Boolean
  proficiencyBonus  Int
  personalityTraits String
  ideals            String
  bonds             String
  flaws             String
  features          String
  languages         String
  abilityScores     Json
  skills            Json
  savingThrows      Json
  abilities         Json
  spells            Json
  equipment         Json
  userId            String
  user              User     @relation(fields: [userId], references: [id])
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Campaign {
  id          String   @id @default(cuid())
  name        String
  description String
  dmUserId    String
  dm          User?     @relation(fields: [dmUserId], references: [id])
  players     User[]   @relation("CampaignPlayers")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model UserPost {
  id        String    @id @default(cuid())
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  likes     Like[]
  comments  Comment[]
}

model Like {
  id        String   @id @default(cuid())
  postId    String
  post      UserPost @relation(fields: [postId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  postId    String
  post      UserPost @relation(fields: [postId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}
